name: Run data export

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
  schedule:
    - cron: 40 */4 * * *

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      - run: curl --fail 'https://ggpk.exposed/version?poe=1' | sed -r 's|.*/([0-9](\.[0-9]+)+)/$|\1|' > version.txt
      - run: git ls-remote https://github.com/poe-tool-dev/dat-schema.git refs/heads/main > schema.txt
      - name: copy version.txt to old location
        run: cp version.txt RePoE/data/version.txt
      - id: version
        run: echo "version=$(cat version.txt)" >> "$GITHUB_OUTPUT"
      - id: autocommit
        uses: stefanzweifel/git-auto-commit-action@v6.0.1
        with:
          commit_message: "[skip ci] Version ${{ steps.version.outputs.version }}"
    outputs:
      changes_detected: ${{ steps.autocommit.outputs.changes_detected }}
      commit_hash: ${{ steps.autocommit.outputs.commit_hash }}
      version: ${{ steps.version.outputs.version }}

  build:
    runs-on: ubuntu-latest
    needs: version
    if: github.event_name != 'schedule' || needs.version.outputs.changes_detected == 'true'
    steps:
      - name: checkout
        uses: actions/checkout@v4.2.2
        with:
          path: poe1
          ref: ${{ github.ref }}
      - if: ${{ needs.version.outputs.changes_detected == 'true' }}
        run: '[ $(git rev-parse ${{ needs.version.outputs.commit_hash }} ) = "$(git rev-parse HEAD)" ] || exit 1'
        working-directory: poe1
      - name: checkout repoe
        uses: actions/checkout@v4.2.2
        with:
          repository: repoe-fork/repoe-fork
          path: RePoE
      - name: checkout pypoe
        uses: actions/checkout@v4.2.2
        with:
          repository: repoe-fork/pypoe
          path: PyPoE
      - name: Install poetry
        run: pipx install 'poetry~=1.8'
      - name: setup python
        uses: actions/setup-python@v5.6.0
        with:
          python-version: "3.13"
          cache: poetry
      - name: clean data dir
        run: find poe1/data '(' -name '*.json' -not -path '*/pob/*' -o -name '*.html' -o -name '*.txt' ')' -delete -print | wc -l
      - run: poetry install
        working-directory: RePoE
      - run: poetry run pypoe_schema_import -a stable
        working-directory: RePoE
      - run: |
          cp RePoE/schema/* ../poe1/data/data-formats
          poetry run generate-schema-doc --config footer_show_time=false RePoE/schema ../poe1/data/data-formats
        working-directory: RePoE
      - name: run export
        run: poetry run repoe all -l all -o ../poe1/data
        working-directory: RePoE
      - name: commit changes
        id: autocommit
        uses: stefanzweifel/git-auto-commit-action@v6.0.1
        with:
          repository: poe1
          skip_fetch: true
          push_options: '--force-with-lease'
          commit_message: "[skip ci] Export ${{ needs.version.outputs.version }}"
      - name: generate index.html
        run: |
          tree data -Jo index.json
          find data -type d -exec tree {} -H '.' --dirsfirst -F -L 1 -T "RePoE - PoE version ${{ needs.version.outputs.version }}" -I 'index.html|schema_doc*' --noreport --charset utf-8 -o {}/index.html \;
          find data -name index.html -exec sed -i 's|<h1>RePoE|<h1><a href="https://github.com/repoe-fork/repoe-fork">RePoE</a>|' {} \;
          mv data/index.html data/poe1.html
          npx -y markdown-to-html-cli --output data/index.html
          cp *.txt data
        working-directory: poe1
      - uses: actions/upload-pages-artifact@v3.0.1
        with:
          path: poe1/data

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: deploy gh-pages
        id: deployment
        uses: actions/deploy-pages@v4.0.5
